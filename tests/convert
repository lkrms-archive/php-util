#!/usr/bin/env php
<?php

namespace Lkrms\Tests;

use Lkrms\Convert;
use Lkrms\Err;

$loader = require (__DIR__ . "/../vendor/autoload.php");
$loader->addPsr4("Lkrms\\Tests\\", __DIR__);

Err::HandleErrors();

$data = [
    "user_id"       => 7654,
    "fields"        => [
        "surname"   => "Williams",
        "email"     => "JWilliams432@gmail.com",
        "notify_by" => [
            "email",
            "sms",
        ],
    ],
];

$queries = [
    "no_force_numeric_keys" => Convert::dataToQuery($data),
    "force_numeric_keys"    => Convert::dataToQuery($data, true),
];

$decoded = array_map(
    function ($q)
    {
        return urldecode($q);
    }, $queries
);

print_r([$queries, $decoded]);

$identifiers = [
    "twowords", "TWOWORDS", "twoWords", "TwoWords",
    "two_words", "TWO_WORDS", "two_Words", "Two_Words",
    "two-words", "TWO-WORDS", "Two-Words",
    "12twowords", "two12words", "twowords12",
    "12TWOWORDS", "TWO12WORDS", "TWOWORDS12",
    "12twoWords", "two12Words", "twoWords12",
    "12TwoWords", "Two12Words", "TwoWords12",
    "12two_words", "two12_words", "two_12words", "two_words12",
    "12TWO_WORDS", "TWO12_WORDS", "TWO_12WORDS", "TWO_WORDS12",
    "12two_Words", "two12_Words", "two_12Words", "two_Words12",
    "12Two_Words", "Two12_Words", "Two_12Words", "Two_Words12",
];

$snakeCase = array_combine($identifiers, array_map(function ($i)
{
    return Convert::toSnakeCase($i);
}, $identifiers));

print_r($snakeCase);

$kebabCase = array_combine($identifiers, array_map(function ($i)
{
    return Convert::toKebabCase($i);
}, $identifiers));

print_r($kebabCase);

$pascalCase = array_combine($identifiers, array_map(function ($i)
{
    return Convert::toPascalCase($i);
}, $identifiers));

print_r($pascalCase);

$normalise = [
    "History & Geography",
    "& Mathematics",
    "Languages â€” Modern",
    "I.T.",
    "IT. ",
    "it",
];
var_dump(array_combine($normalise, array_map(
    function ($i) { return Convert::toNormal($i); },
    $normalise
)));

$list = [
    ['id' => 38, 'name' => 'Amir'],
    ['id' => 32, 'name' => 'Greta'],
    ['id' => 71, 'name' => 'Terry'],
];

$map = Convert::listToMap($list, 'id');

print_r($map);

$nouns = [
    "blitz",
    "boy",
    "bus",
    "cat",
    "city",
    "halo",
    "house",
    "lunch",
    "marsh",
    "photo",
    "piano",
    "potato",
    "puppy",
    "ray",
    "tax",
    "truss",
];

print_r(array_combine($nouns, array_map(
    function ($i) { return Convert::nounToPlural($i); },
    $nouns
)));

$fqcn = [
    'Composer\Command\DumpAutoloadCommand',
    '\Composer\Command\ExecCommand',
    'RequireCommand',
    'Composer\Command\UpdateCommand\\',
];

print_r(array_combine($fqcn, array_map(
    function ($i) { return Convert::classToBasename($i); },
    $fqcn
)));
