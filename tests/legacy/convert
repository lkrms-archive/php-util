#!/usr/bin/env php
<?php

namespace Lkrms\Tests;

use Lkrms\Facade\Err;
use Lkrms\Utility\Convert;
use Lkrms\Utility\Get;

require __DIR__ . '/../vendor/autoload.php';

Err::register();

$list = [
    ['id' => 38, 'name' => 'Amir'],
    ['id' => 32, 'name' => 'Greta'],
    ['id' => 71, 'name' => 'Terry'],
];

$map = Convert::listToMap($list, 'id');

print_r($map);

$nouns = [
    'blitz',
    'boy',
    'bus',
    'cat',
    'city',
    'halo',
    'house',
    'lunch',
    'marsh',
    'photo',
    'piano',
    'potato',
    'puppy',
    'ray',
    'tax',
    'truss',
];

print_r(array_combine($nouns, array_map(
    fn($i) => Convert::nounToPlural($i),
    $nouns
)));

$paths = [
    'file',
    'file.ext',
    'file.tar.ext',
    'file.another.tar.ext',
    'file.not an.ext',
    '/path/to/file',
    '/path/to/file/',
    '/path/to/file.ext',
    '/path/to/file.ext/',
    '/path/to/file.tar.ext',
    '/path/to/file.tar.ext/',
    '/path/to/file.another.tar.ext',
    '/path/to/file.another.tar.ext/',
    '/path/to/file.not an.ext',
    '/path/to/file.not an.ext/',
    'path/to/file',
    'path/to/file/',
    'path/to/file.ext',
    'path/to/file.ext/',
    'path/to/file.tar.ext',
    'path/to/file.tar.ext/',
    'path/to/file.another.tar.ext',
    'path/to/file.another.tar.ext/',
    'path/to/file.not an.ext',
    'path/to/file.not an.ext/',
    './file',
    './file.ext',
    './file.tar.ext',
    './file.another.tar.ext',
    './file.not an.ext',
    './.file',
    './.file.ext',
    './.file.tar.ext',
    './.file.another.tar.ext',
    './.file.not an.ext',
    './..file',
    './..file.ext',
    './..file.tar.ext',
    './..file.another.tar.ext',
    './..file.not an.ext',
];

print_r([
    'pathToBasename' => array_combine($paths, array_map(
        fn($i) => Convert::pathToBasename($i),
        $paths
    )),
    'pathToBasename(,1)' => array_combine($paths, array_map(
        fn($i) => Convert::pathToBasename($i, 1),
        $paths
    )),
    'pathToBasename(,2)' => array_combine($paths, array_map(
        fn($i) => Convert::pathToBasename($i, 2),
        $paths
    )),
    'pathToBasename(,-1)' => array_combine($paths, array_map(
        fn($i) => Convert::pathToBasename($i, -1),
        $paths
    )),
]);

$fqcn = [
    'Composer\Command\DumpAutoloadCommand',
    '\Composer\Command\ExecCommand',
    '\Composer\Command\ACommand',
    '\Composer\Command\Command',
    'Command',
    'RequireCommand',
    'Composer\\Command\\UpdateCommand\\',
];

print_r([
    'basename' => array_combine($fqcn, array_map(
        fn($i) => Get::basename($i),
        $fqcn
    )),
    'basename_sans_suffix' => array_combine($fqcn, array_map(
        fn($i) => Get::basename($i, 'Command'),
        $fqcn
    )),
    'namespace' => array_combine($fqcn, array_map(
        fn($i) => Get::namespace($i),
        $fqcn
    ))
]);

print_r([
    'PT48M' => Convert::intervalToSeconds('PT48M'),
    'P1W2D' => Convert::intervalToSeconds('P1W2D'),
]);
