#!/usr/bin/env php
<?php

namespace Lkrms\Tests;

use Lkrms\Err;
use Lkrms\Reflect;
use ReflectionClass;

$loader = require (__DIR__ . "/../vendor/autoload.php");
$loader->addPsr4("Lkrms\\Tests\\", __DIR__);

Err::HandleErrors();

class MyClass
{
    public $Id;

    public $AltId;

    public $Name;

    public $Parent;

    public $AltParent;

    public function __construct(
        $id,
        int $altId,
        string $name,
        MyClass $parent,
        MyClass $altParent = null
    )
    {
        $this->Id        = $id;
        $this->AltId     = $altId;
        $this->Name      = $name;
        $this->Parent    = $parent;
        $this->AltParent = $altParent;
    }
}

$class  = new ReflectionClass(MyClass::class);
$method = $class->getConstructor();

$types = [];
$names = [];

foreach ($method->getParameters() as $param)
{
    $types[$param->getName()] = Reflect::getAllTypes($param->getType());
    $names[$param->getName()] = Reflect::getAllTypeNames($param->getType());
}

var_dump($types);
var_dump($names);
