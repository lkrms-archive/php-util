#!/usr/bin/env php
<?php

namespace Lkrms\Tests\Reflect;

use Lkrms\Concern\TConstructible;
use Lkrms\Concern\TExtensible;
use Lkrms\Concern\TFullyGettable;
use Lkrms\Concern\TResolvable;
use Lkrms\Concern\TSettable;
use Lkrms\Support\ClosureBuilder;
use Lkrms\Err\Err;

$loader = require (__DIR__ . "/../../vendor/autoload.php");
$loader->addPsr4("Lkrms\\Tests\\", __DIR__ . "/..");

Err::handleErrors();

class A
{
    use TExtensible, TResolvable, TFullyGettable, TSettable;

    public static function getSettable(): array
    {
        return ['Id', 'Name'];
    }

    protected $Id;

    protected $Name;

    protected $Unwritable = "can't change me";
}

class B extends A
{
    use TConstructible;

    protected function _GetData()
    {
        return $this->Data;
    }

    protected function _SetData($value)
    {
        $this->Data         = $value;
        $this->DataModified = time();
    }

    protected function _GetMeta()
    {
        return $this->Meta;
    }

    protected function _IssetMeta()
    {
        return isset($this->Meta);
    }

    protected function _SetMeta($value)
    {
        $this->Meta = $value;
    }

    protected function _UnsetMeta()
    {
        $this->Meta = null;
    }

    private $Data = [];

    private $Meta;

    protected $DataModified;

    // @phpstan-ignore-next-line
    private $DoNotEven;
}

print_r([
    "A" => ClosureBuilder::get(A::class),
    "B" => ClosureBuilder::get(B::class),
]);
