#!/usr/bin/env php
<?php

namespace Lkrms\Tests;

use Lkrms\Closure;
use Lkrms\Err;
use Throwable;

$loader = require (__DIR__ . "/../vendor/autoload.php");
$loader->addPsr4("Lkrms\\Tests\\", __DIR__);

Err::handleErrors();

$in = [
    "A_mapped"          => "value 1",
    "B_mapped_null"     => null,
    "D_dangerous"       => "value 7 (success)",
    "E_dangerous_null"  => null,
    "F_unmapped"        => "value 3",
    "G_unmapped_null"   => null,
    "dd_dangerous"      => null,
    "ee_dangerous_null" => "value 5 (FAILURE)",
];

$map = [
    "A_mapped"         => "aa_mapped",
    "B_mapped_null"    => "bb_mapped_null",
    "C_missing"        => "cc_missing",
    "D_dangerous"      => "dd_dangerous",
    "E_dangerous_null" => "ee_dangerous_null",
];

$in2 = [
    "USER_ID"   => 32,
    "FULL_NAME" => "Greta",
    "MAIL"      => "greta@domain.test",
];

$in3 = [
    "USER_ID"   => 38,
    "FULL_NAME" => "Amir",
    "MAIL"      => "amir@domain.test",
    "URI"       => "https://domain.test/~amir",
];

$in4 = [
    "USER_ID"   => 71,
    "FULL_NAME" => "Terry",
    "MAIL"      => null,
];

$map2 = [
    "USER_ID"   => "Id",
    "FULL_NAME" => "Name",
    "MAIL"      => "Email",
];

$exceptions = [];

$skipNone              = Closure::getArrayMapper($map, false, Closure::SKIP_NONE);
$skipNone2             = Closure::getArrayMapper($map, false, Closure::SKIP_NONE);
$skipMissing           = Closure::getArrayMapper($map, false, Closure::SKIP_MISSING);
$skipNull              = Closure::getArrayMapper($map, false, Closure::SKIP_NULL);
$skipUnmapped          = Closure::getArrayMapper($map, false, Closure::SKIP_UNMAPPED);
$skipMissingOrUnmapped = Closure::getArrayMapper($map);

$sameKeys         = Closure::getArrayMapper($map2, true);
$sameKeysSkipNull = Closure::getArrayMapper($map2, true, Closure::SKIP_NULL);

try
{
    $sameKeys($in3);
}
catch (Throwable $ex)
{
    $exceptions[] = $ex;
}

print_r([
    "skipNone"              => $skipNone($in),
    "skipMissing"           => $skipMissing($in),
    "skipNull"              => $skipNull($in),
    "skipUnmapped"          => $skipUnmapped($in),
    "skipMissingOrUnmapped" => $skipMissingOrUnmapped($in),
    "sameKeys2"             => $sameKeys($in2),
    "sameKeys4"             => $sameKeys($in4),
    "sameKeysSkipNull4"     => $sameKeysSkipNull($in4),
    "skipNone===skipNone2"  => $skipNone === $skipNone2,
    "exceptions"            => array_map(function (Throwable $ex) { return $ex->getMessage(); }, $exceptions),
]);
